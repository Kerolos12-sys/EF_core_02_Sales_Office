// <auto-generated />
using EF_core_02_Sales_Office;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_core_02_Sales_Office.Migrations
{
    [DbContext(typeof(dbcontext))]
    [Migration("20250923233221_one")]
    partial class one
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_core_02_Sales_Office.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalesOfficeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalesOfficeId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("EF_core_02_Sales_Office.Owned_Property", b =>
                {
                    b.Property<int>("Owner_id")
                        .HasColumnType("int");

                    b.Property<int>("Property_id")
                        .HasColumnType("int");

                    b.Property<double?>("Precent")
                        .HasColumnType("float");

                    b.HasKey("Owner_id", "Property_id");

                    b.HasIndex("Property_id");

                    b.ToTable("Owned_Property");
                });

            modelBuilder.Entity("EF_core_02_Sales_Office.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("EF_core_02_Sales_Office.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalesOfficeId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SalesOfficeId");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("EF_core_02_Sales_Office.Sales_Office", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("Number");

                    b.HasIndex("ManagerId")
                        .IsUnique()
                        .HasFilter("[ManagerId] IS NOT NULL");

                    b.ToTable("Sales_Office");
                });

            modelBuilder.Entity("EF_core_02_Sales_Office.Employee", b =>
                {
                    b.HasOne("EF_core_02_Sales_Office.Sales_Office", "SalesOffice")
                        .WithMany("Employees")
                        .HasForeignKey("SalesOfficeId");

                    b.Navigation("SalesOffice");
                });

            modelBuilder.Entity("EF_core_02_Sales_Office.Owned_Property", b =>
                {
                    b.HasOne("EF_core_02_Sales_Office.Owner", "Owner")
                        .WithMany("Owned_Properties")
                        .HasForeignKey("Owner_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_core_02_Sales_Office.Property", "Property")
                        .WithMany("Owned_Properties")
                        .HasForeignKey("Property_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("EF_core_02_Sales_Office.Property", b =>
                {
                    b.HasOne("EF_core_02_Sales_Office.Sales_Office", "SalesOffice")
                        .WithMany("Properties")
                        .HasForeignKey("SalesOfficeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("SalesOffice");
                });

            modelBuilder.Entity("EF_core_02_Sales_Office.Sales_Office", b =>
                {
                    b.HasOne("EF_core_02_Sales_Office.Employee", "Manager")
                        .WithOne("ManagedOffice")
                        .HasForeignKey("EF_core_02_Sales_Office.Sales_Office", "ManagerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("EF_core_02_Sales_Office.Employee", b =>
                {
                    b.Navigation("ManagedOffice");
                });

            modelBuilder.Entity("EF_core_02_Sales_Office.Owner", b =>
                {
                    b.Navigation("Owned_Properties");
                });

            modelBuilder.Entity("EF_core_02_Sales_Office.Property", b =>
                {
                    b.Navigation("Owned_Properties");
                });

            modelBuilder.Entity("EF_core_02_Sales_Office.Sales_Office", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
